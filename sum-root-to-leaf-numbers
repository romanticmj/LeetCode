/*
Given a binary tree containing digits from0-9only, each root-to-leaf path could represent a number.
An example is the root-to-leaf path1->2->3which represents the number123.
Find the total sum of all root-to-leaf numbers.
For example,
    1
   / \
  2   3

The root-to-leaf path1->2represents the number12.
The root-to-leaf path1->3represents the number13.
Return the sum = 12 + 13 =25.*/

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode *root) {
		return DFS(root,0);
	}


	int DFS(TreeNode *root, int tSum){
		if (root->left == NULL && root->right == NULL)
		{
			return tSum * 10 + root->val;
		}
		else if (root->left&&root->right)
		{
			return DFS(root->left, tSum * 10 + root->val) + DFS(root->right, tSum * 10 + root->val);
			
		}
		else if (root->right)
		{
			return DFS(root->right, tSum * 10 + root->val);
		}
		else{
			return DFS(root->left, tSum * 10 + root->val);
		}
	}
};
