Reverse digits of an integer.

Example1: x = 123, return 321
Example2: x = -123, return -321
The input is assumed to be a 32-bit signed integer. Your function should return 0 when the reversed integer overflows.

/************************************************************************/

class Solution {
public:
    int reverse(int x) {
        const int max = 0x7fffffff;         //溢出处理
        const int min = 0x80000000;
        bool tag = true;
        if(x < 0)
        {
            tag = false;
        }
        x = abs(x);
        vector<int> temp;
        while(x)
        {
            temp.push_back(x % 10);
            x /= 10;
        }
        long result = 0;
        for(vector<int>::iterator it = temp.begin(); it < temp.end(); it++)
        {
            result = result * 10 + *it;
            if (result > max || result < min)   //溢出处理  
            {
                return 0;  
            }  
        }
        if(!tag)
        {
            result = 0 - result;
        }
        return result;
    }
};
